{"title":"M2 Carthagéo - Du discret au continu - Séance 5","markdown":{"yaml":{"title":"M2 Carthagéo - Du discret au continu - Séance 5","subtitle":"Séance 5 - Distances et variations spatiales - Approche naïve de l'auto-corrélation spatiale","format":{"clean-revealjs":{"output-file":"index.html","mermaid-format":"js","slide-number":"c/t","show-slide-number":"all","preview-links":true,"chalkboard":false,"header-logo":"../img/_logo-pantheon-sorbonne-RVB-bleu-or.svg","scrollable":false,"favicon":"../img/favicon.ico","footer":"M2 Carthagéo - Analyse Spatiale R.C. - Séance 5","fig-cap-location":"margin"}},"filters":["reveal-header"],"author":{"name":"Robin Cura","affiliations":"Université Paris 1 Panthéon-Sorbonne"},"date":"2025-10-22","date-format":"[Mardi] DD/MM/YYYY","params":{"correction":true}},"headingText":"Comment choisir des seuils de distance pour les interpolations ?","containsRefs":false,"markdown":"\n\n\nOn utilise deux grandes méthodes de choix : \n\n- Des seuils basés d'après des connaissances thématiques\n- Des seuils basés sur les distances empiriques de l'échantillon de mesures\n\n## Mesures de distances empiriques\n\n#### Chargement des packages\n```{r, echo = TRUE}\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(readxl)\n  library(sf)\n  library(potential)\n  library(patchwork)\n  library(glue)\n})\n```\n\n----------------\n\n\n#### Import des données\n\n```{r,  echo = TRUE}\ncommunes_paris <- st_read(\"../DATA/Maillages_Limitrophes_Paris.gpkg\", layer = \"Communes\", as_tibble = TRUE) %>%\n  st_transform(2154) %>%\n  filter(INSEE_DEP == \"75\") %>% filter(INSEE_COM != \"75056\")\ncontour_paris <- communes_paris %>% summarise() %>% st_buffer(300)\n```\n\n------------\n\n```{r,  echo = TRUE}\nbureauxVote <- st_read(\"../DATA/BureauxVote_Paris_L93.gpkg\", as_tibble = TRUE) %>%\n  st_transform(2154)\nresultatsVote <- read_xlsx(\"../DATA/BureauxVote_Paris_Resultats_Presi2022_T1.xlsx\") %>%\n  select(-c(1:6))\n\nresultats_bureaux <- bureauxVote %>%\n  left_join(resultatsVote, by = c(\"CodeBVote\" = \"Code du b.vote\")) %>%\n  mutate(Inscrits = as.numeric(Inscrits))\n```\n\n\n----------------\n\n### 1 - Distance au plus proche voisin\n\nLe *package* `nngeo` permet de calculer de nombreux types de distances entre des objets `sf`.\n\n```{r,  echo = TRUE}\nlibrary(nngeo)\nlibrary(listviewer)\n\nliste_distance <- st_nn(x = resultats_bureaux, y = resultats_bureaux,\n                        k = 1, returnDist = TRUE)\nlistviewer::jsonedit(liste_distance)\n```\n\n\n----------------\n\n\n::: callout-tip\n\nEn paramétrant `k`, on choisit le nombre de plus proches voisins dont calculer la distance.\n\nIci, en choisissant une valeur de `k = 1`, la fonction calcule la distance entre chaque point et son plus proche voisin, ie. lui-même (voir les distances qui sont toutes à 0).\n\nPour calculer la distance au plus proche voisin réel, il faut donc indiquer `k = 2` et ne conserver que le second voisin.\n\n:::\n\n\n----------------\n\n```{r, results='hold', echo = TRUE}\nlibrary(nngeo)\nlibrary(listviewer)\n\nliste_distance_2 <- st_nn(x = resultats_bureaux, y = resultats_bureaux,\n                          k = 2, returnDist = TRUE)\ndistance_ppv <- liste_distance_2$dist %>% map_dbl(2)\nsummary(distance_ppv)\n```\n\n\n::: callout-warning\n#### Quel est le problème ici ?\n:::\n\n\n------------\n\n\n::: callout-tip\n\n### Les bureaux de vote sont souvent regroupés dans des lieux municipaux communs.\n\n- Il est donc nécessaire de dé-doublonner les points pour en mesurer les distances réelles.\n:::\n\n#### Solution rapide : suppression pure des doublons géométriques\n\n```{r, echo = TRUE}\nbureaux_distincts <- resultats_bureaux %>% select() %>% distinct()\ndistance_bureaux <- st_nn(x = bureaux_distincts, y = bureaux_distincts,\n                          k = 2, returnDist = TRUE) %>%\n  pluck(\"dist\") %>%\n  map_dbl(2)\nsummary(distance_bureaux)\n```\n\n------------\n\n\n::: callout-tip\n\n### Les bureaux de vote sont souvent regroupés dans des lieux municipaux communs.\n\n- Il est donc nécessaire de dé-doublonner les points pour en mesurer les distances réelles.\n:::\n\n#### Solution plus juste : agrégation des votes des doublons\n\n```{r, echo = TRUE}\nbureaux_distincts <- resultats_bureaux %>% group_by(geom) %>%\n  summarise(\n    across(where(is.character), ~first(.x)),\n    across(where(is.numeric), ~sum(.x)),\n    .groups = \"drop\"\n    )\n\ndistance_bureaux <- st_nn(x = bureaux_distincts, y = bureaux_distincts,\n                          k = 2, returnDist = TRUE) %>%\n  pluck(\"dist\") %>%\n  map_dbl(2)\nsummary(distance_bureaux)\n```\n\n----------------------\n\n::: callout-exercice\n\n#### Exercice : Tracer l'histogramme et la courbe de densité des distances au plus proche voisin des bureaux de vote\n\n:::\n\n\n------------------------\n```{r, eval = TRUE, echo = params$correction}\ndistance_bureaux_tbl <- distance_bureaux %>%\n  as_tibble() %>%\n  rename(distance = value)\n\np1 <- ggplot(distance_bureaux_tbl) +\n  aes(distance) +\n  geom_histogram(fill = \"#67c9ff\", colour = \"white\")\n\np2 <- p1 + \n  geom_density()\n\np3 <- ggplot(distance_bureaux_tbl) +\n  aes(distance) +\n  geom_histogram(aes(y = after_stat(density)),\n                 fill = \"#67c9ff\",\n                 colour = \"white\") +\n  geom_density(aes(y = after_stat(density)))\np3\n```\n\n\n------------------------\n\n::: callout-tips\n\n#### Où couper ?\n\n- Tracer la courbe des fréquences cumulées en fonction de la distance au plus proche voisin\n\n:::\n\n```{r, eval = TRUE, echo = params$correction}\nfrequence_cumulee <- distance_bureaux_tbl %>%\n  arrange(distance) %>%\n  mutate(dummy = 1/nrow(distance_bureaux_tbl)) %>%\n  mutate(cumfreq = cumsum(dummy))\n\n```\n\n---------------------\n\n```{r, eval = TRUE, echo = params$correction}\nggplot(frequence_cumulee) +\n  aes(distance, cumfreq) +\n  geom_line() +\n  scale_y_continuous(labels = scales::percent)\n```\n\n\n---------------------------\n\n::: callout-alert\n\n#### Pourquoi s'arrêter au premier plus proche voisin ?\n\n:::\n\n---------------------\n\n\n### 2 - Distances aux n plus proche voisins\n\n```{r, echo = TRUE}\ndistance_bureaux_10 <- st_nn(x = bureaux_distincts, y = bureaux_distincts,\n                          k = 11, returnDist = TRUE) %>%\n  pluck(\"dist\") %>%\n  enframe() %>%\n  rename(ID = name) %>%\n  unnest(value) %>%\n  rename(distance = value) %>%\n  group_by(ID) %>%\n  mutate(num_voisin = row_number() - 1) %>%\n  ungroup() %>%\n  filter(num_voisin > 0) %>%\n  mutate(num_voisin = as.factor(num_voisin))\n\n```\n\n::: callout-exercice\n\n#### Exercice : Représentation des distances aux 10 plus proches voisins\n\n:::\n\n----------------------\n\n::: {.panel-tabset}\n\n\n\n#### Basique\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nggplot(distance_bureaux_10) +\n  geom_histogram(aes(x = distance))\n```\n\n#### Facets\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nggplot(distance_bureaux_10) +\n  geom_histogram(aes(x = distance)) +\n  facet_wrap(~num_voisin, ncol = 1)  \n```\n\n\n#### Ridgelines\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nlibrary(ggridges)\n\nggplot(distance_bureaux_10) +\n  geom_density_ridges(aes(x = distance, y = num_voisin))\n```\n\n#### Ridge bins\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nlibrary(ggridges)\n\nggplot(distance_bureaux_10) +\n  geom_density_ridges(aes(x = distance, y = num_voisin), stat = \"binline\", scale = 0.9)\n```\n\n:::\n\n------------------------\n\n\n### 3 - Distances moyennes\n\n::: callout-note\n\n#### Tant qu'à faire, autant analyser l'ensemble des distances entre tous les bureaux de vote\n\n:::\n\n::: callout-exercice\n\n#### Exercice : Mesure de distances\n\n- A l'aide de la fonction `st_distance` du package `sf`, calculez la matrice de distance entre tous les bureaux de vote de Paris et affichez-en l'histogramme\n:::\n\n------------\n\n```{r, echo = params$correction, eval = TRUE}\nmatrice_distance <- st_distance(x = resultats_bureaux, y = resultats_bureaux,\n                                by_element = FALSE)\n\nliste_distances_BV <- matrice_distance %>%\n  as.matrix() %>%\n  as_tibble() %>%\n  mutate(ID_Origine = as.character(row_number()), .before = 1) %>%\n  pivot_longer(-ID_Origine) %>%\n  mutate(ID_Destination = str_remove(name, pattern = \"V\")) %>%\n  mutate(distance = as.numeric(value)) %>%\n  select(-value, -name) %>%\n  filter(ID_Origine != ID_Destination)\n\nglimpse(liste_distances_BV)\n```\n\n\n-------------------------\n\n```{r, echo = params$correction, eval = TRUE}\n\nggplot(liste_distances_BV) +\n  geom_histogram(aes(distance, after_stat(density)))\n```\n\n\n------------------\n\n### 4 - Distances et différences\n\n::: callout\n#### Maintenant qu'on a une liste complète des distances, pourquoi est-ce qu'on n'explorerait pas le lien entre distance (dans Paris) et comportement de vote ?\n:::\n\n- **Dit autrement, on peut chercher à voir si les comportements électoraux présentent une <u>autocorrélation spatiale</u>**\n\n::: callout-alert\n\n#### En dépit de ce que nous avons fait lors des précédentes séances, il n'y a strictement <u>aucune logique</u> à réaliser une interpolation de variables qui ne sont pas corrélées spatialement.\n\n:::\n\n------------------\n\n#### Autocorrélation spatiale naïve\n\n- On peut chercher à voir s'il y a un lien entre la variation d'une variable électorale et la distance entre les bureaux de vote.\n\n- Prenons l'exemple des votes pour Emmanuel Macron lors du 1er tour des présidentielles 2022 à Paris\n\n--------------------\n\n```{r, echo = TRUE}\nvotes_macron <- resultats_bureaux %>%\n  st_drop_geometry() %>%\n  mutate(pctMACRON = MACRON / Inscrits) %>%\n  select(pctMACRON) %>%\n  mutate(ID_bureau = as.character(row_number()))\n\ncouples_bureaux <- liste_distances_BV %>%\n  left_join(votes_macron, by = c(\"ID_Origine\" = \"ID_bureau\")) %>%\n  rename(pctMACRON_Origine = pctMACRON) %>%\n  left_join(votes_macron, by = c(\"ID_Destination\" = \"ID_bureau\")) %>%\n  rename(pctMACRON_Destination = pctMACRON)\n\nglimpse(couples_bureaux)\n```\n\n-----------------\n\n::: callout-exercice\n\n#### Exercice - Comment analyser la différence ? 1/3\n\n- Proposer une métrique permettant de mesurer l'écart de votes, et représentez-la en fonction de la distance.\n\n:::\n\n-----------------\n\n```{r, echo = params$correction, eval = TRUE}\ndifference_votes <- couples_bureaux %>%\n  mutate(diffPCT = pctMACRON_Origine - pctMACRON_Destination)\n\n```\n\n```{r, echo = params$correction, eval = FALSE}\nggplot(difference_votes) +\n  geom_point(aes(x = distance, y = diffPCT))\n  \n```\n![](../img/plot_distance_difference.png){fig-align='center'}\n\n\n------------------------\n\n::: callout-exercice\n\n#### Exercice - Comment analyser la différence ? 2/3\n\n- La représentation des différences directes est rapidement illisibile en raison de la symétrie des données.\n\n- Filtrer le jeu de données précédent pour n'afficher les différences qu'une fois, et uniquement de manière positive\n\n:::\n\n```{r, eval = TRUE, echo = params$correction}\ndifference_votes_assym <- difference_votes %>%\n  filter(ID_Origine > ID_Destination) %>%\n  mutate(diffAbs = abs(diffPCT))\n```\n\n---------\n\n::: {.panel-tabset}\n\n##### Directe\n```{r, echo = params$correction, eval = FALSE}\nggplot(difference_votes_assym) +\n  geom_point(aes(x = distance, y = diffAbs))\n```\n```{r, echo = FALSE, eval = TRUE, results='asis'}\ncat(\"![](../img/plot_distance_absolu.png){fig-align='center'}\")\n```\n\n##### Densité\n\n```{r, echo = params$correction, eval = FALSE}\nggplot(difference_votes_assym) +\n  geom_density_2d(aes(x = distance, y = diffAbs))\n```\n```{r, echo = FALSE, eval = TRUE, results='asis'}\ncat(\"![](../img/plot_distance_densite.png){fig-align='center'}\")\n```\n\n:::\n\n----------------------\n\n::: callout-exercice\n\n#### Exercice - Comment analyser la différence ? 3/3\n\n- Le lien entre distance et variation du taux de vote Macron n'est toujours pas évident à lire.\n\n- Proposer une méthode permettant de synthétiser la tendance\n\n:::\n\n---------------------------------\n\n### 5 - Vers le semi-variogramme\n\n#### On discrétise la distance par bornes de 100m\n\n```{r, eval = TRUE, echo = params$correction}\ndistances_differences_discretes <- difference_votes_assym %>%\n  mutate(bande = cut(distance, breaks = c(0:120) * 100, labels = FALSE)) %>%\n  mutate(bande = bande * 100)\n\nmeanDiff <- distances_differences_discretes %>%\n  group_by(bande) %>%\n  summarise(diffmoyenne = mean(diffAbs), nb = n())\n\n```\n\n-------------------------\n\n```{r, eval = TRUE, echo = params$correction}\nggplot(meanDiff) +\n  aes(x = bande, y = diffmoyenne, size = nb) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent)\n```\n\n----------------------------\n\n### Les semivariogrammes\n\n::: callout-note\n#### Cette manière de représenter l'autocorrélation spatiale entre des entités est à la base d'un outil de géostatistique, le semivariogramme.\n\n- Cela consiste à représenter la semi-variance en fonction de bandes de distances :\n\n$semivar(d_{ij}) = 0.5 \\times \\frac{\\sum_{i..j}{(valeur_{i} - valeur_j)^2}{}}{n}$\n:::\n\n```{r, echo = TRUE}\n\nsemivarDiff <- distances_differences_discretes %>%\n  group_by(bande) %>%\n  summarise(semivar = 0.5 * mean(diffAbs^2), nb = n())\n\n```\n\n---------------------\n\n```{r, echo = TRUE}\n\nggplot(semivarDiff) +\n  aes(x = bande, y = semivar, size = nb) +\n  geom_point() +\n  scale_y_continuous()\n\n```\n\n```{r}\n#| echo: false\n#| eval: false\n#| warning: false\n\nwrite_rds(resultats_bureaux, \"../DATA/resultats_bureaux.rds\")\nwrite_rds(difference_votes_assym, \"../DATA/difference_votes_assym.rds\", compress=\"xz\")\nwrite_rds(contour_paris, \"../DATA/contour_paris.rds\")\nwrite_rds(communes_paris, \"../DATA/communes_paris.rds\")\n\n\n```","srcMarkdownNoYaml":"\n\n## Comment choisir des seuils de distance pour les interpolations ?\n\nOn utilise deux grandes méthodes de choix : \n\n- Des seuils basés d'après des connaissances thématiques\n- Des seuils basés sur les distances empiriques de l'échantillon de mesures\n\n## Mesures de distances empiriques\n\n#### Chargement des packages\n```{r, echo = TRUE}\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(readxl)\n  library(sf)\n  library(potential)\n  library(patchwork)\n  library(glue)\n})\n```\n\n----------------\n\n\n#### Import des données\n\n```{r,  echo = TRUE}\ncommunes_paris <- st_read(\"../DATA/Maillages_Limitrophes_Paris.gpkg\", layer = \"Communes\", as_tibble = TRUE) %>%\n  st_transform(2154) %>%\n  filter(INSEE_DEP == \"75\") %>% filter(INSEE_COM != \"75056\")\ncontour_paris <- communes_paris %>% summarise() %>% st_buffer(300)\n```\n\n------------\n\n```{r,  echo = TRUE}\nbureauxVote <- st_read(\"../DATA/BureauxVote_Paris_L93.gpkg\", as_tibble = TRUE) %>%\n  st_transform(2154)\nresultatsVote <- read_xlsx(\"../DATA/BureauxVote_Paris_Resultats_Presi2022_T1.xlsx\") %>%\n  select(-c(1:6))\n\nresultats_bureaux <- bureauxVote %>%\n  left_join(resultatsVote, by = c(\"CodeBVote\" = \"Code du b.vote\")) %>%\n  mutate(Inscrits = as.numeric(Inscrits))\n```\n\n\n----------------\n\n### 1 - Distance au plus proche voisin\n\nLe *package* `nngeo` permet de calculer de nombreux types de distances entre des objets `sf`.\n\n```{r,  echo = TRUE}\nlibrary(nngeo)\nlibrary(listviewer)\n\nliste_distance <- st_nn(x = resultats_bureaux, y = resultats_bureaux,\n                        k = 1, returnDist = TRUE)\nlistviewer::jsonedit(liste_distance)\n```\n\n\n----------------\n\n\n::: callout-tip\n\nEn paramétrant `k`, on choisit le nombre de plus proches voisins dont calculer la distance.\n\nIci, en choisissant une valeur de `k = 1`, la fonction calcule la distance entre chaque point et son plus proche voisin, ie. lui-même (voir les distances qui sont toutes à 0).\n\nPour calculer la distance au plus proche voisin réel, il faut donc indiquer `k = 2` et ne conserver que le second voisin.\n\n:::\n\n\n----------------\n\n```{r, results='hold', echo = TRUE}\nlibrary(nngeo)\nlibrary(listviewer)\n\nliste_distance_2 <- st_nn(x = resultats_bureaux, y = resultats_bureaux,\n                          k = 2, returnDist = TRUE)\ndistance_ppv <- liste_distance_2$dist %>% map_dbl(2)\nsummary(distance_ppv)\n```\n\n\n::: callout-warning\n#### Quel est le problème ici ?\n:::\n\n\n------------\n\n\n::: callout-tip\n\n### Les bureaux de vote sont souvent regroupés dans des lieux municipaux communs.\n\n- Il est donc nécessaire de dé-doublonner les points pour en mesurer les distances réelles.\n:::\n\n#### Solution rapide : suppression pure des doublons géométriques\n\n```{r, echo = TRUE}\nbureaux_distincts <- resultats_bureaux %>% select() %>% distinct()\ndistance_bureaux <- st_nn(x = bureaux_distincts, y = bureaux_distincts,\n                          k = 2, returnDist = TRUE) %>%\n  pluck(\"dist\") %>%\n  map_dbl(2)\nsummary(distance_bureaux)\n```\n\n------------\n\n\n::: callout-tip\n\n### Les bureaux de vote sont souvent regroupés dans des lieux municipaux communs.\n\n- Il est donc nécessaire de dé-doublonner les points pour en mesurer les distances réelles.\n:::\n\n#### Solution plus juste : agrégation des votes des doublons\n\n```{r, echo = TRUE}\nbureaux_distincts <- resultats_bureaux %>% group_by(geom) %>%\n  summarise(\n    across(where(is.character), ~first(.x)),\n    across(where(is.numeric), ~sum(.x)),\n    .groups = \"drop\"\n    )\n\ndistance_bureaux <- st_nn(x = bureaux_distincts, y = bureaux_distincts,\n                          k = 2, returnDist = TRUE) %>%\n  pluck(\"dist\") %>%\n  map_dbl(2)\nsummary(distance_bureaux)\n```\n\n----------------------\n\n::: callout-exercice\n\n#### Exercice : Tracer l'histogramme et la courbe de densité des distances au plus proche voisin des bureaux de vote\n\n:::\n\n\n------------------------\n```{r, eval = TRUE, echo = params$correction}\ndistance_bureaux_tbl <- distance_bureaux %>%\n  as_tibble() %>%\n  rename(distance = value)\n\np1 <- ggplot(distance_bureaux_tbl) +\n  aes(distance) +\n  geom_histogram(fill = \"#67c9ff\", colour = \"white\")\n\np2 <- p1 + \n  geom_density()\n\np3 <- ggplot(distance_bureaux_tbl) +\n  aes(distance) +\n  geom_histogram(aes(y = after_stat(density)),\n                 fill = \"#67c9ff\",\n                 colour = \"white\") +\n  geom_density(aes(y = after_stat(density)))\np3\n```\n\n\n------------------------\n\n::: callout-tips\n\n#### Où couper ?\n\n- Tracer la courbe des fréquences cumulées en fonction de la distance au plus proche voisin\n\n:::\n\n```{r, eval = TRUE, echo = params$correction}\nfrequence_cumulee <- distance_bureaux_tbl %>%\n  arrange(distance) %>%\n  mutate(dummy = 1/nrow(distance_bureaux_tbl)) %>%\n  mutate(cumfreq = cumsum(dummy))\n\n```\n\n---------------------\n\n```{r, eval = TRUE, echo = params$correction}\nggplot(frequence_cumulee) +\n  aes(distance, cumfreq) +\n  geom_line() +\n  scale_y_continuous(labels = scales::percent)\n```\n\n\n---------------------------\n\n::: callout-alert\n\n#### Pourquoi s'arrêter au premier plus proche voisin ?\n\n:::\n\n---------------------\n\n\n### 2 - Distances aux n plus proche voisins\n\n```{r, echo = TRUE}\ndistance_bureaux_10 <- st_nn(x = bureaux_distincts, y = bureaux_distincts,\n                          k = 11, returnDist = TRUE) %>%\n  pluck(\"dist\") %>%\n  enframe() %>%\n  rename(ID = name) %>%\n  unnest(value) %>%\n  rename(distance = value) %>%\n  group_by(ID) %>%\n  mutate(num_voisin = row_number() - 1) %>%\n  ungroup() %>%\n  filter(num_voisin > 0) %>%\n  mutate(num_voisin = as.factor(num_voisin))\n\n```\n\n::: callout-exercice\n\n#### Exercice : Représentation des distances aux 10 plus proches voisins\n\n:::\n\n----------------------\n\n::: {.panel-tabset}\n\n\n\n#### Basique\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nggplot(distance_bureaux_10) +\n  geom_histogram(aes(x = distance))\n```\n\n#### Facets\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nggplot(distance_bureaux_10) +\n  geom_histogram(aes(x = distance)) +\n  facet_wrap(~num_voisin, ncol = 1)  \n```\n\n\n#### Ridgelines\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nlibrary(ggridges)\n\nggplot(distance_bureaux_10) +\n  geom_density_ridges(aes(x = distance, y = num_voisin))\n```\n\n#### Ridge bins\n\n```{r, echo = params$correction, eval = TRUE, results='hold'}\n\nlibrary(ggridges)\n\nggplot(distance_bureaux_10) +\n  geom_density_ridges(aes(x = distance, y = num_voisin), stat = \"binline\", scale = 0.9)\n```\n\n:::\n\n------------------------\n\n\n### 3 - Distances moyennes\n\n::: callout-note\n\n#### Tant qu'à faire, autant analyser l'ensemble des distances entre tous les bureaux de vote\n\n:::\n\n::: callout-exercice\n\n#### Exercice : Mesure de distances\n\n- A l'aide de la fonction `st_distance` du package `sf`, calculez la matrice de distance entre tous les bureaux de vote de Paris et affichez-en l'histogramme\n:::\n\n------------\n\n```{r, echo = params$correction, eval = TRUE}\nmatrice_distance <- st_distance(x = resultats_bureaux, y = resultats_bureaux,\n                                by_element = FALSE)\n\nliste_distances_BV <- matrice_distance %>%\n  as.matrix() %>%\n  as_tibble() %>%\n  mutate(ID_Origine = as.character(row_number()), .before = 1) %>%\n  pivot_longer(-ID_Origine) %>%\n  mutate(ID_Destination = str_remove(name, pattern = \"V\")) %>%\n  mutate(distance = as.numeric(value)) %>%\n  select(-value, -name) %>%\n  filter(ID_Origine != ID_Destination)\n\nglimpse(liste_distances_BV)\n```\n\n\n-------------------------\n\n```{r, echo = params$correction, eval = TRUE}\n\nggplot(liste_distances_BV) +\n  geom_histogram(aes(distance, after_stat(density)))\n```\n\n\n------------------\n\n### 4 - Distances et différences\n\n::: callout\n#### Maintenant qu'on a une liste complète des distances, pourquoi est-ce qu'on n'explorerait pas le lien entre distance (dans Paris) et comportement de vote ?\n:::\n\n- **Dit autrement, on peut chercher à voir si les comportements électoraux présentent une <u>autocorrélation spatiale</u>**\n\n::: callout-alert\n\n#### En dépit de ce que nous avons fait lors des précédentes séances, il n'y a strictement <u>aucune logique</u> à réaliser une interpolation de variables qui ne sont pas corrélées spatialement.\n\n:::\n\n------------------\n\n#### Autocorrélation spatiale naïve\n\n- On peut chercher à voir s'il y a un lien entre la variation d'une variable électorale et la distance entre les bureaux de vote.\n\n- Prenons l'exemple des votes pour Emmanuel Macron lors du 1er tour des présidentielles 2022 à Paris\n\n--------------------\n\n```{r, echo = TRUE}\nvotes_macron <- resultats_bureaux %>%\n  st_drop_geometry() %>%\n  mutate(pctMACRON = MACRON / Inscrits) %>%\n  select(pctMACRON) %>%\n  mutate(ID_bureau = as.character(row_number()))\n\ncouples_bureaux <- liste_distances_BV %>%\n  left_join(votes_macron, by = c(\"ID_Origine\" = \"ID_bureau\")) %>%\n  rename(pctMACRON_Origine = pctMACRON) %>%\n  left_join(votes_macron, by = c(\"ID_Destination\" = \"ID_bureau\")) %>%\n  rename(pctMACRON_Destination = pctMACRON)\n\nglimpse(couples_bureaux)\n```\n\n-----------------\n\n::: callout-exercice\n\n#### Exercice - Comment analyser la différence ? 1/3\n\n- Proposer une métrique permettant de mesurer l'écart de votes, et représentez-la en fonction de la distance.\n\n:::\n\n-----------------\n\n```{r, echo = params$correction, eval = TRUE}\ndifference_votes <- couples_bureaux %>%\n  mutate(diffPCT = pctMACRON_Origine - pctMACRON_Destination)\n\n```\n\n```{r, echo = params$correction, eval = FALSE}\nggplot(difference_votes) +\n  geom_point(aes(x = distance, y = diffPCT))\n  \n```\n![](../img/plot_distance_difference.png){fig-align='center'}\n\n\n------------------------\n\n::: callout-exercice\n\n#### Exercice - Comment analyser la différence ? 2/3\n\n- La représentation des différences directes est rapidement illisibile en raison de la symétrie des données.\n\n- Filtrer le jeu de données précédent pour n'afficher les différences qu'une fois, et uniquement de manière positive\n\n:::\n\n```{r, eval = TRUE, echo = params$correction}\ndifference_votes_assym <- difference_votes %>%\n  filter(ID_Origine > ID_Destination) %>%\n  mutate(diffAbs = abs(diffPCT))\n```\n\n---------\n\n::: {.panel-tabset}\n\n##### Directe\n```{r, echo = params$correction, eval = FALSE}\nggplot(difference_votes_assym) +\n  geom_point(aes(x = distance, y = diffAbs))\n```\n```{r, echo = FALSE, eval = TRUE, results='asis'}\ncat(\"![](../img/plot_distance_absolu.png){fig-align='center'}\")\n```\n\n##### Densité\n\n```{r, echo = params$correction, eval = FALSE}\nggplot(difference_votes_assym) +\n  geom_density_2d(aes(x = distance, y = diffAbs))\n```\n```{r, echo = FALSE, eval = TRUE, results='asis'}\ncat(\"![](../img/plot_distance_densite.png){fig-align='center'}\")\n```\n\n:::\n\n----------------------\n\n::: callout-exercice\n\n#### Exercice - Comment analyser la différence ? 3/3\n\n- Le lien entre distance et variation du taux de vote Macron n'est toujours pas évident à lire.\n\n- Proposer une méthode permettant de synthétiser la tendance\n\n:::\n\n---------------------------------\n\n### 5 - Vers le semi-variogramme\n\n#### On discrétise la distance par bornes de 100m\n\n```{r, eval = TRUE, echo = params$correction}\ndistances_differences_discretes <- difference_votes_assym %>%\n  mutate(bande = cut(distance, breaks = c(0:120) * 100, labels = FALSE)) %>%\n  mutate(bande = bande * 100)\n\nmeanDiff <- distances_differences_discretes %>%\n  group_by(bande) %>%\n  summarise(diffmoyenne = mean(diffAbs), nb = n())\n\n```\n\n-------------------------\n\n```{r, eval = TRUE, echo = params$correction}\nggplot(meanDiff) +\n  aes(x = bande, y = diffmoyenne, size = nb) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent)\n```\n\n----------------------------\n\n### Les semivariogrammes\n\n::: callout-note\n#### Cette manière de représenter l'autocorrélation spatiale entre des entités est à la base d'un outil de géostatistique, le semivariogramme.\n\n- Cela consiste à représenter la semi-variance en fonction de bandes de distances :\n\n$semivar(d_{ij}) = 0.5 \\times \\frac{\\sum_{i..j}{(valeur_{i} - valeur_j)^2}{}}{n}$\n:::\n\n```{r, echo = TRUE}\n\nsemivarDiff <- distances_differences_discretes %>%\n  group_by(bande) %>%\n  summarise(semivar = 0.5 * mean(diffAbs^2), nb = n())\n\n```\n\n---------------------\n\n```{r, echo = TRUE}\n\nggplot(semivarDiff) +\n  aes(x = bande, y = semivar, size = nb) +\n  geom_point() +\n  scale_y_continuous()\n\n```\n\n```{r}\n#| echo: false\n#| eval: false\n#| warning: false\n\nwrite_rds(resultats_bureaux, \"../DATA/resultats_bureaux.rds\")\nwrite_rds(difference_votes_assym, \"../DATA/difference_votes_assym.rds\", compress=\"xz\")\nwrite_rds(contour_paris, \"../DATA/contour_paris.rds\")\nwrite_rds(communes_paris, \"../DATA/communes_paris.rds\")\n\n\n```"},"formats":{"clean-revealjs":{"identifier":{"display-name":"RevealJS","target-format":"clean-revealjs","base-format":"revealjs","extension-name":"clean"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"mermaid-format":"js","df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":["../../../_extensions/grantmcdermott/clean/mathjax-config.js"],"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdn.jsdelivr.net/npm/mathjax@4/tex-mml-chtml.js"},"slide-level":2,"to":"revealjs","include-before-body":[{"text":"<script src=\"mathjax-config.js\"></script>\n"}],"filters":["reveal-header"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.8.24","auto-stretch":true,"theme":["default","../../../_extensions/grantmcdermott/clean/clean.scss"],"menu":{"side":"left"},"slideNumber":"c/t","date-format":"[Mardi] DD/MM/YYYY","revealjs-plugins":[],"title":"M2 Carthagéo - Du discret au continu - Séance 5","subtitle":"Séance 5 - Distances et variations spatiales - Approche naïve de l'auto-corrélation spatiale","author":{"name":"Robin Cura","affiliations":"Université Paris 1 Panthéon-Sorbonne"},"date":"2025-10-22","params":{"correction":true},"showSlideNumber":"all","previewLinks":true,"chalkboard":false,"header-logo":"../img/_logo-pantheon-sorbonne-RVB-bleu-or.svg","scrollable":false,"favicon":"../img/favicon.ico","footer":"M2 Carthagéo - Analyse Spatiale R.C. - Séance 5","fig-cap-location":"margin"}}},"projectFormats":["html"]}